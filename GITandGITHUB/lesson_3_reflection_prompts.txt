When would you want to use a remote repository rather than keeping all your work local?
    Whenever I wanted to be able to access file from any location not just one that contained a working copy.
    Also would be useful as a central repository for multiple authors.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
    I can be working on some changes that may be overwritten by an automatic pull.

Describe the differences between forks, clones, and branches.  When would you use one instead of another?
    Branch: gives two separate commit path that are connected by some earlier commits
						correct choice if the branches share a common functionality that, if updated, needs to be reflected in all branches that occur after that commit
		Clone: gives a copy of an entire repository, this is useful for backing up, for acquiring a project that will/might be significantly altered and it is desired that no changes affect others
						you might do this instead of branching if you intend to use data in repository for a project that is separate from project that repositry was built for
		Fork: GITHub only, same as clone but enforces ownership of repository being cloned, useful for licensing purposes.

What is the benefit of having a copy of the last known state of the remote stored locally?
    You will be working with the latest changes ... which could/should reduce conflicts on merging your work with others.

How would you collaborate without using Git or GitHub?  What would be easier, and what would be harder?
    1 Create a separate copy of project that includes your changes
		2 Submit to others who may need to review your changes and notify them (via email or meet)
		3 Wait for approval or notification of problems
		4 merge you changes (manually) into production data
		Frankly Git/GitHub simplifies the process greatly ... it does require ritualistic behaviour of all participants ... which can be difficult to enforce

When would you want to make changes in a separate branch rather than directly in master?  What benefits does each approach have?
    If you wanted members of project to review/approve your changes prior to merging them into master/production path.
